<?xml version='1.0' encoding='utf-8'?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- Note:  A "Server" is not itself a "Container", so you may not
     define subcomponents such as "Valves" at this level.
     Documentation at /docs/config/server.html -->
<Server 
  port="<%= node['tomcat']['shutdown_port'] %>" 
  shutdown="<%= node['tomcat']['shutdown'] %>">

  <!--APR library loader. Documentation at /docs/apr.html -->
  <% if node['tomcat']['connector']['apr']['enabled'] -%>
  <Listener 
    className="org.apache.catalina.core.AprLifecycleListener" 
    SSLEngine="<%= node['tomcat']['connector']['ssl_engine'] %>" />
  <% end -%>

  <!--Initialize Jasper prior to webapps are loaded. Documentation at /docs/jasper-howto.html -->
  <Listener 
    className="org.apache.catalina.core.JasperListener" />

  <!-- Prevent memory leaks due to use of particular java/javax APIs-->
  <Listener 
    className="org.apache.catalina.core.JreMemoryLeakPreventionListener" />
  <Listener 
    className="org.apache.catalina.mbeans.GlobalResourcesLifecycleListener" />
  <Listener 
    className="org.apache.catalina.core.ThreadLocalLeakPreventionListener" />

  <!-- Global JNDI resources
       Documentation at /docs/jndi-resources-howto.html -->
  <GlobalNamingResources>

    <!-- Editable user database that can also be used by
         UserDatabaseRealm to authenticate users -->
    <Resource 
      name="UserDatabase" 
      auth="Container"
      type="org.apache.catalina.UserDatabase"
      description="User database that can be updated and saved"
      factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
      pathname="conf/tomcat-users.xml" />

  </GlobalNamingResources>

  <!-- A "Service" is a collection of one or more "Connectors" that share
       a single "Container" Note:  A "Service" is not itself a "Container",
       so you may not define subcomponents such as "Valves" at this level.
       Documentation at /docs/config/service.html -->
  <Service 
    name="Catalina">

    <!-- The connectors can use a shared executor, you can define one or more
         named thread pools. Http connectors configured accorting to
         guide at http://tomcat.apache.org/tomcat-7.0-doc/config/http.html -->
    <Executor 
      name="tomcatThreadPool" 
      namePrefix="catalina-exec-"
      maxThreads="<%= node['tomcat']['executor']['max_threads'] %>" 
      minSpareThreads="<%= node['tomcat']['executor']['min_spare_threads'] %>"/>

    <!-- A "Connector" represents an endpoint by which requests are received
         and responses are returned. Documentation at :
         Java HTTP Connector: /docs/config/http.html (blocking & non-blocking)
         Java AJP  Connector: /docs/config/ajp.html
         APR (HTTP/AJP) Connector: /docs/apr.html
         Define a non-SSL HTTP/1.1 Connector on port 8080 -->
    <Connector 
      allowTrace="<%= node['tomcat']['connector']['http']['allow_trace'] %>"
      asyncTimeout="<%= node['tomcat']['connector']['http']['async_timeout'] %>"
      enableLookups="<%= node['tomcat']['connector']['http']['enable_lookups'] %>"
      maxHeaderCount="<%= node['tomcat']['connector']['http']['max_header_count'] %>"
      maxParameterCount="<%= node['tomcat']['connector']['http']['max_parameter_count'] %>"
      maxPostSize="<%= node['tomcat']['connector']['http']['max_post_size'] %>"
      maxSavePostSize="<%= node['tomcat']['connector']['http']['max_save_post_size'] %>"
      parseBodyMethods="<%= node['tomcat']['connector']['http']['parse_body_methods'] %>"
      port="<%= node['tomcat']['connector']['http']['port'] %>" 
      protocol="<%= node['tomcat']['connector']['http']['protocol'] %>"
      <%= if !node['tomcat']['connector']['http']['proxy_name'].nil? && !node['tomcat']['connector']['http']['proxy_name'].empty? then "proxyName=\"node['tomcat']['connector']['http']['proxy_name']\"" end %>
      proxyPort="<%= node['tomcat']['connector']['http']['proxy_port'] %>"
      redirectPort="<%= node['tomcat']['connector']['http']['redirect_port'] %>"
      scheme="<%= node['tomcat']['connector']['http']['scheme'] %>"
      secure="<%= node['tomcat']['connector']['http']['secure'] %>"
      URIEncoding="<%= node['tomcat']['connector']['http']['uri_encoding'] %>"
      useBodyEncodingForURI="<%= node['tomcat']['connector']['http']['body_encoding_for_uri'] %>"
      useIPVHosts="<%= node['tomcat']['connector']['http']['use_ipv_hosts'] %>"
      xpoweredBy="<%= node['tomcat']['connector']['http']['xpoweredby'] %>"
      acceptCount="<%= node['tomcat']['connector']['http']['accept_count'] %>"
      acceptorThreadCount="<%= node['tomcat']['connector']['http']['acceptor_thread_count'] %>"
      acceptorThreadPriority="<%= node['tomcat']['connector']['http']['acceptor_thread_priority'] %>"
      <%= if !node['tomcat']['connector']['http']['address'].nil? && !node['tomcat']['connector']['http']['address'].empty? then "address=\"node['tomcat']['connector']['http']['address']\"" end %>
      bindOnInit="<%= node['tomcat']['connector']['http']['bind_on_init'] %>"
      compressableMimeType="<%= node['tomcat']['connector']['http']['compressable_mime_type'] %>"
      compression="<%= node['tomcat']['connector']['http']['compression'] %>"
      compressionMinSize="<%= node['tomcat']['connector']['http']['compression_min_size'] %>"
      connectionLinger="<%= node['tomcat']['connector']['http']['connection_linger'] %>"
      connectionTimeout="<%= node['tomcat']['connector']['http']['connection_timeout'] %>"
      connectionUploadTimeout="<%= node['tomcat']['connector']['http']['connection_upload_timeout'] %>"
      disableUploadTimeout="<%= node['tomcat']['connector']['http']['disable_upload_timeout'] %>"
      executor="<%= node['tomcat']['connector']['http']['executor'] %>"
      <%= if !node['tomcat']['connector']['http']['executor_kill_timeout'].nil? && !node['tomcat']['connector']['http']['executor_kill_timeout'].empty? then "executorTerminationTimeoutMillis=\"node['tomcat']['connector']['http']['executor_kill_timeout']\"" end %>
      keepAliveTimeout="<%= node['tomcat']['connector']['http']['keep_alive_timeout'] %>"
      <%= if !node['tomcat']['connector']['http']['max_connections'].nil? && !node['tomcat']['connector']['http']['max_connections'].empty? then "maxConnections=\"node['tomcat']['connector']['http']['max_connections']\"" end %>
      maxExtensionSize="<%= node['tomcat']['connector']['http']['max_extension_size'] %>"
      maxHttpHeaderSize="<%= node['tomcat']['connector']['http']['max_http_header_size'] %>"
      maxKeepAliveRequests="<%= node['tomcat']['connector']['http']['max_keep_alive_requests'] %>"
      maxTrailerSize="<%= node['tomcat']['connector']['http']['max_trailer_size'] %>"
      maxThreads="<%= node['tomcat']['connector']['http']['max_threads'] %>"
      noCompressionUserAgents="<%= node['tomcat']['connector']['http']['no_compression_user_agents'] %>"
      processorCache="<%= node['tomcat']['connector']['http']['processor_cache'] %>"
      restrictedUserAgents="<%= node['tomcat']['connector']['http']['restricted_user_agents'] %>"
      server="<%= node['tomcat']['connector']['http']['server'] %>"
      socketBuffer="<%= node['tomcat']['connector']['http']['socket_buffer'] %>"
      SSLEnabled="<%= node['tomcat']['connector']['http']['ssl_enabled'] %>"
      tcpNoDelay="<%= node['tomcat']['connector']['http']['tcp_no_delay'] %>"
      threadPriority="<%= node['tomcat']['connector']['http']['thread_priority'] %>"
      deferAccept="<%= node['tomcat']['connector']['http']['defer_accept'] %>"
      pollerSize="<%= node['tomcat']['connector']['http']['poller_size'] %>"
      pollTime="<%= node['tomcat']['connector']['http']['poll_time'] %>"
      sendfileSize="<%= node['tomcat']['connector']['http']['sendfile_size'] %>"
      useComet="<%= node['tomcat']['connector']['http']['use_comet'] %>"
      useSendfile="<%= node['tomcat']['connector']['http']['use_sendfile'] %>" />

    <!-- The JMX Remote Lifecycle Listener fixes the ports used by the JMX/RMI 
         Server making things much simpler if you need to connect jconsole or 
         a similar tool to a remote Tomcat instance that is running behind 
         a firewall.-->
    <Listener 
      className="org.apache.catalina.mbeans.JmxRemoteLifecycleListener"
      rmiRegistryPortPlatform="<%= node['tomcat']['jmx']['rmi_registry_port'] %>" 
      rmiServerPortPlatform="<%= node['tomcat']['jmx']['rmi_server_port'] %>"
      rmiBindAddress="<%= node['tomcat']['jmx']['rmi_bind_address'] %>" 
      useLocalPorts="<%= node['tomcat']['jmx']['use_local_ports'] %>" />

    <!-- An Engine represents the entry point (within Catalina) that processes
         every request.  The Engine implementation for Tomcat stand alone
         analyzes the HTTP headers included with the request, and passes them
         on to the appropriate Host (virtual host).
         Documentation at /docs/config/engine.html -->
    <Engine 
      name="Catalina" 
      defaultHost="localhost">

      <!-- Use the LockOutRealm to prevent attempts to guess user passwords
           via a brute-force attack -->
      <Realm 
        className="org.apache.catalina.realm.LockOutRealm">

        <!-- This Realm uses the UserDatabase configured in the global JNDI
             resources under the key "UserDatabase".  Any edits
             that are performed against this UserDatabase are immediately
             available for use by the Realm.  -->
        <Realm 
          className="org.apache.catalina.realm.UserDatabaseRealm"
          resourceName="UserDatabase"/>

      </Realm>

      <Host 
        name="localhost"  
        appBase="webapps"
        unpackWARs="true" 
        autoDeploy="true">

        <!-- Access log processes all example.
             Documentation at: /docs/config/valve.html
             Note: The pattern used is equivalent to using pattern="common" -->
        <Valve 
          className="org.apache.catalina.valves.AccessLogValve" 
          directory="logs"
          prefix="localhost_access_log."
          suffix=".log"
          pattern="%h %l %u %t &quot;%r&quot; %s %b" />

      </Host>
    </Engine>
  </Service>
</Server>